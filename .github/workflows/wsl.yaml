name: Build WSL
on:
  workflow_dispatch:
    inputs:
      appID:
        description: 'Release name to use for the bundle'
        required: true
        default: 'openEulerLatest'
      rootfses:
        description: 'WSL rootfs urls, separated by a colon. Direct set of "tar.gz::arch" if arch is not in the filename'
        required: true
        default: ''
      rootfseschecksum:
        description: 'Should download a SHA256SUMS file to check the rootfs'
        required: true
        default: 'no'
      upload:
        description: 'Should we upload the appxbundle to the store'
        required: true
        default: 'no'
  push:
    branches: [ "main" ]
  schedule:
    - cron: '0 10 * * *'
concurrency: build-wsl

env:
  goversion: '1.18'

jobs:
  build-rootfs:
    uses: ./.github/workflows/rootfs.yaml
  build-wsl:
    needs: build-rootfs
    name: Build openEuler 22.03
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        arch: [aarch64, x86_64]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.1
      - name: Download artifact
        uses: actions/download-artifact@v2
      - name: show and prepare artifact
        shell: bash
        run: |
          if [ "${{ matrix.arch }}" == "x86_64" ];then
            echo "_TARGET=x64" >> $GITHUB_ENV
          else
            echo "_TARGET=ARM64" >> $GITHUB_ENV
          fi
          mkdir -p ${{ env._TARGET }}
          gzip openeuler-${{ matrix.arch }}-wsl-rootfs.tar/openeuler-${{ matrix.arch }}-wsl-rootfs.tar && mv openeuler-${{ matrix.arch }}-wsl-rootfs.tar/openeuler-${{ matrix.arch }}-wsl-rootfs.tar.gz ${{ matrix.arch }}/install.tar.gz
          ls -lh **
      # Decode the Base64 encoded Pfx
      - name: Decode the Pfx
        run: |
          New-Item -ItemType directory -Path certificate
          Set-Content -Path certificate\certificate.txt -Value '${{ secrets.SIGN_CERT }}'
          certutil -decode certificate\certificate.txt certificate\certificate.pfx
          Import-PfxCertificate -CertStoreLocation Cert:LocalMachine\Trust -FilePath certificate\certificate.pfx
          Import-PfxCertificate -CertStoreLocation Cert:CurrentUser\My -FilePath certificate\certificate.pfx
      - name: Build Bundle
        shell: powershell
        run: |
          msbuild .\DistroLauncher.sln /t:Build /m /nr:false /p:Configuration=Release /p:AppxBundle=Always /p:AppxBundlePlatforms="${{ env._TARGET }}" /p:Platform="${{ env._TARGET }}" -verbosity:normal

