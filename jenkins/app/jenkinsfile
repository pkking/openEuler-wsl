pipeline {
    agent {label 'windows'}

    parameters {
        choice(choices: ['22.03', '20.03', '22.09'], name: 'release')
    }

    environment {
        release_version = '0'
    }

    stages {
        stage('prepare') {
            steps {
                checkout([$class: 'GitSCM', branches: [[name: '*/master']], extensions: [], userRemoteConfigs: [[credentialsId: 'lichaoran-gitee', url: 'https://gitee.com/mywaaagh_admin/wsl']]])
                bat 'pip install -r requirements.txt'

                script {
                    nstdout = bat(returnStdout: true, script: '@python get_sp_version.py %release%').trim()
                    release_version = nstdout
                    println("stdout ####" + release_version + "###########")
                }
                withEnv(["release_version=${release_version}"]) {
                    bat('python custom.py -r %release% -v %release_version%.%BUILD_NUMBER%')
                }
                bat 'echo %PATH%'
                bat 'powershell "New-Item -ItemType directory -Path certificate"'
                writeFile file: 'certificate\certificate.txt', text: '${env.wsl_cert_b64_lichaoran}'
                bat 'powershell "certutil -decode certificate\certificate.txt certificate\certificate.pfx"'
                bat 'powershell "Import-PfxCertificate -CertStoreLocation Cert:LocalMachine\Trust -FilePath certificate\certificate.pfx"'
                bat 'Import-PfxCertificate -CertStoreLocation Cert:CurrentUser\My -FilePath certificate\certificate.pfx'
                cleanWs()
            }
        }
    }
}
